a)DONE!
SELECT DISTINCT e.morada, e.codigo 
FROM Espaco e NATURAL JOIN Posto 
WHERE  e.morada NOT IN (SELECT a.morada FROM Aluga a);

b)DONE!
SELECT  a.morada, COUNT(a.morada) AS Amount_of_reservations
FROM  Aluga a NATURAL JOIN Edificio
GROUP BY morada 
HAVING Amount_of_reservations >= (SELECT COUNT(x.numero)/2 FROM Reserva x);

//We have to add more reserves which has more than 50% (5 more) addresses

c)DONE! but it couldn’t work…
SELECT u.nome
FROM User u NATURAL JOIN Arrenda a
WHERE EXISTS
(SELECT COUNT(f1.id) FROM Arrenda NATURAL JOIN Fiscaliza f1 
GROUP BY f1.id 
HAVING f1.id IN
(SELECT COUNT(f2.id) FROM Fiscaliza f2 GROUP BY f2.id));


//We have to add Fiscal which change a the same alugavel


d)I THINK ITS DONE!
SELECT DISTINCT e.morada, SUM(o.tarifa)*DATEDIFF(day,o.data_fim, o.data_inico) AS maxpayed
FROM Paga p NATURAL JOIN Oferta o NATURAL JOIN Espaco e NATURAL JOIN Aluga 
WHERE YEAR(p.data) = 2016
GROUP BY o.tarifa;

e)
SELECT
FROM
WHERE


a) Quais os espaços com postos que nunca foram alugados?

b) Quais edifícios com um número de reservas superior à média?

c) Quais utilizadores cujos alugáveis foram fiscalizados sempre pelo mesmo fiscal?

d) Qual o montante total realizado (pago) por cada espaço durante o ano de 2016?
Assuma que a tarifa indicada na oferta é diária. Deve considerar os casos em que o
espaço foi alugado totalmente ou por postos.

e) Quais os espaços de trabalho cujos postos nele contidos foram todos alugados? (Por
alugado entende-se um posto de trabalho que tenha pelo menos uma oferta aceite,
independentemente das suas datas.)
